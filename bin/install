#!/usr/bin/env bash
function unify_version {
  printf "%03d%03d%03d" $(echo "$1"| sed -e 's/-rc[0-9]//' | tr '.' ' ');
}

# calculate linux distribution tag to match:
# https://www.mongodb.com/try/download/community-edition/releases/archive
function get_distro_tag() {
  echo "ubuntu2404"
}

install_mongo() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local platform=""
  local arch=""
  local tempdir=""
  local tempfile=""
  local filename=""
  local download_url=""

  [ "Linux" = "$(uname)" ] && platform="linux" || platform="osx"
  if [ "x86_64" = "$(uname -m)" ]; then
    arch="x86_64"
  elif [ "arm64" = "$(uname -m)" ]; then
    arch="arm64"
  elif [ "aarch64" = "$(uname -m)" ]; then
    arch="aarch64"
  else
    arch="i686"
  fi
  [ "linux" = "${platform}" ] && tempdir=$(mktemp -d asdf-mongodb.XXXX) || tempdir=$(mktemp -dt asdf-mongodb.XXXX)

  if [[ "linux" = "${platform}" ]]; then
    local tag="$(get_distro_tag)"
    # We also need to re-write the arch for arm64 to aarch64
    if [[ "arm64" == "${arch}" ]]; then
      arch="aarch64"
    fi
    filename="mongodb-linux-${arch}-${tag}-${version}.tgz"
  else
    if [[ "$(unify_version "$version")" > "$(unify_version "5.0.21")" ]]; then
      filename="mongodb-macos-${arch}-${version}.tgz"
    elif [[ "$(unify_version "$version")" > "$(unify_version "4.2")" ]]; then
      filename="mongodb-macos-x86_64-${version}.tgz"
    elif [[ "$(unify_version "$version")" < "$(unify_version "3.0")" ]]; then
      filename="mongodb-osx-x86_64-${version}.tgz"
    else
      filename="mongodb-osx-ssl-x86_64-${version}.tgz"
    fi
  fi

  tempfile="${tempdir}/${filename}"
  download_url="https://fastdl.mongodb.org/${platform}/${filename}"

  echo "download_url $download_url"

  curl -L "${download_url}" -o "${tempfile}"
  tar zxf "${tempfile}" -C $install_path --strip-components=1 || exit 1

  rm -rf "${tempdir}"
}

install_mongo $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
